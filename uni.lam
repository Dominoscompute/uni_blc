let
  -- binary LC interpreter
  -- intL cont bits = cont (\free.parsed) unparsed_bits
  intL = \cont\list.list (\bit0\list1\intL\cont.list1 (\bit1.bit0
    (intL (\exp.bit1 (cont (\args\arg.exp (\z.z arg args)))
                   (intL (\exp2.cont (\args.exp args (exp2 args))))))
    (bit1 (cont (\args.args bit1))
         (\list2.intL (\var.cont (\args.var (args bit1))) list1))))
    intL cont;
  
  -- loop
  omega = omega;

  -- binary LC universal machine for closed programs
  uni = intL (\z.z omega);

  -- byte oriented LC universal machine for closed programs
  gamma = \cont\bytes.bytes (\byte.byte cont);
  uni8 = intL (\exp\bits.exp omega) gamma
  
in uni

-- test with
-- (cat delimit.blc; echo -n 1111000111001) | ./blc run uni.lam
-- which should output
-- <11010,>
